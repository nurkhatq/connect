#!/bin/bash
# ssl-finish.sh - –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ SSL

set -e

echo "üéâ –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤"
echo "======================================"

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
source .env
DOMAIN=${DOMAIN:-connect-aitu.me}

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã
echo "üìã –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–ª—É—á–µ–Ω–Ω—ã—Ö —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤..."
if [ -f "certbot/conf/live/$DOMAIN/fullchain.pem" ]; then
    echo "‚úÖ –°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã –Ω–∞–π–¥–µ–Ω—ã –ª–æ–∫–∞–ª—å–Ω–æ!"
else
    echo "üîç –°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã –ø–æ–ª—É—á–µ–Ω—ã –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ, –∫–æ–ø–∏—Ä—É–µ–º –ª–æ–∫–∞–ª—å–Ω–æ..."
    
    # –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç
    mkdir -p certbot/conf/live/$DOMAIN
    mkdir -p certbot/conf/archive/$DOMAIN
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã –≤ docker volume –∏–ª–∏ —Å–æ–∑–¥–∞–µ–º –∑–∞–Ω–æ–≤–æ
    docker run --rm -v $(pwd)/certbot/conf:/etc/letsencrypt certbot/certbot certificates || {
        echo "‚ö†Ô∏è  –°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã, –Ω–æ Let's Encrypt —Å–æ–æ–±—â–∏–ª –æ–± —É—Å–ø–µ—Ö–µ."
        echo "üîÑ –ü–µ—Ä–µ—Å–æ–∑–¥–∞–µ–º —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã..."
        
        # –û—Å—Ç–∞–Ω–æ–≤–∏–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –µ—Å–ª–∏ –æ–Ω–∏ —Ä–∞–±–æ—Ç–∞—é—Ç
        docker-compose -f docker-compose.temp.yml down 2>/dev/null || true
        
        # –ó–∞–ø—É—Å—Ç–∏–º —Å–Ω–æ–≤–∞
        docker-compose -f docker-compose.temp.yml up -d
        sleep 30
        
        # –ü–æ–ª—É—á–∏–º —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã –µ—â–µ —Ä–∞–∑
        docker run --rm \
          -v $(pwd)/certbot/conf:/etc/letsencrypt \
          -v $(pwd)/certbot/www:/var/www/certbot \
          --network aitu-excellence-test_aitu-network \
          certbot/certbot \
          certonly \
          --webroot \
          --webroot-path=/var/www/certbot \
          --email ${SSL_EMAIL:-admin@aitu.edu.kz} \
          --agree-tos \
          --no-eff-email \
          --force-renewal \
          -d $DOMAIN \
          -d www.$DOMAIN
    }
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–Ω–æ–≤–∞
if [ -f "certbot/conf/live/$DOMAIN/fullchain.pem" ]; then
    echo "‚úÖ –°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã –≥–æ—Ç–æ–≤—ã!"
    echo "üìã –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–µ:"
    openssl x509 -in certbot/conf/live/$DOMAIN/fullchain.pem -noout -dates
else
    echo "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã"
    exit 1
fi

# –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
echo ""
echo "üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
docker-compose -f docker-compose.temp.yml down

# –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ docker-compose.prod.yml
echo ""
echo "üìù –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–µ–Ω–Ω–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏..."

cat > docker-compose.prod.yml << PRODEOF
services:
  frontend:
    build: 
      context: ./frontend
      dockerfile: Dockerfile
      target: runner
    container_name: aitu_frontend_prod
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=https://$DOMAIN/api
      - NEXT_PUBLIC_TELEGRAM_BOT_USERNAME=\${TELEGRAM_BOT_USERNAME}
    depends_on:
      - backend
    networks:
      - aitu-network
    restart: unless-stopped

  backend:
    build: ./backend
    container_name: aitu_backend_prod
    environment:
      - DATABASE_URL=\${DATABASE_URL}
      - REDIS_URL=redis://:\${REDIS_PASSWORD}@redis:6379
      - JWT_SECRET_KEY=\${JWT_SECRET_KEY}
      - TELEGRAM_BOT_TOKEN=\${TELEGRAM_BOT_TOKEN}
      - TELEGRAM_BOT_USERNAME=\${TELEGRAM_BOT_USERNAME}
      - APP_NAME=\${APP_NAME}
      - DEBUG=\${DEBUG}
      - ENVIRONMENT=\${ENVIRONMENT}
      - DOMAIN=\${DOMAIN}
      - UPLOAD_DIR=\${UPLOAD_DIR}
      - MAX_FILE_SIZE=\${MAX_FILE_SIZE}
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./backend/uploads:/app/uploads
    networks:
      - aitu-network
    restart: unless-stopped

  db:
    image: postgres:15-alpine
    container_name: aitu_postgres_prod
    environment:
      - POSTGRES_USER=\${POSTGRES_USER}
      - POSTGRES_PASSWORD=\${POSTGRES_PASSWORD}
      - POSTGRES_DB=\${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - aitu-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U \${POSTGRES_USER} -d \${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: aitu_redis_prod
    command: redis-server --appendonly yes --requirepass \${REDIS_PASSWORD}
    environment:
      - REDIS_PASSWORD=\${REDIS_PASSWORD}
    volumes:
      - redis_data:/data
    networks:
      - aitu-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "--no-auth-warning", "-a", "\${REDIS_PASSWORD}", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

  nginx:
    image: nginx:alpine
    container_name: aitu_nginx_prod
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.prod.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/logs:/var/log/nginx
      - ./certbot/conf:/etc/letsencrypt:ro
      - ./certbot/www:/var/www/certbot:ro
    depends_on:
      - frontend
      - backend
    networks:
      - aitu-network
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  aitu-network:
    driver: bridge
PRODEOF

# –ó–∞–ø—É—Å–∫ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–µ–Ω–Ω–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
echo ""
echo "üöÄ –ó–∞–ø—É—Å–∫ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–µ–Ω–Ω–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ —Å SSL..."
docker-compose -f docker-compose.prod.yml up -d

# –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞
echo "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
sleep 30

# –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
echo ""
echo "üìä –°—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤:"
docker-compose -f docker-compose.prod.yml ps

echo ""
echo "üß™ –ü—Ä–æ–≤–µ—Ä–∫–∞ HTTPS..."
curl -I https://$DOMAIN 2>/dev/null | head -5 || echo "‚ö†Ô∏è  HTTPS –ø–æ–∫–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, –ø–æ–¥–æ–∂–¥–∏—Ç–µ –Ω–µ–º–Ω–æ–≥–æ"

echo ""
echo "üéâ SSL –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"
echo "üåê –í–∞—à —Å–∞–π—Ç: https://$DOMAIN"
echo "üîß API endpoint: https://$DOMAIN/api"
echo ""
echo "‚úÖ –ì–æ—Ç–æ–≤–æ! –§—Ä–æ–Ω—Ç–µ–Ω–¥ —Ç–µ–ø–µ—Ä—å –º–æ–∂–µ—Ç –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ –±—ç–∫–µ–Ω–¥—É —á–µ—Ä–µ–∑ HTTPS!"
